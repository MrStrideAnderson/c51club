C51 COMPILER V9.00   PRINT                                                                 11/27/2017 19:45:05 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE PRINT
OBJECT MODULE PLACED IN .\obj\print.obj
COMPILER INVOKED BY: C:\my program\Keil\C51\BIN\C51.EXE src\print.c OMF2 BROWSE DEBUG PRINT(.\print.lst) OBJECT(.\obj\pr
                    -int.obj)

line level    source

   1          /*
   2          ** $Id: print.c,v 1.55a 2006/05/31 13:30:05 lhf Exp $
   3          ** print bytecodes
   4          ** See Copyright Notice in lua.h
   5          */
   6          
   7          #include <ctype.h>
   8          #include <stdio.h>
   9          
  10          #define luac_c
  11          #define LUA_CORE
  12          
  13          #include "ldebug.h"
  14          #include "lobject.h"
  15          #include "lopcodes.h"
  16          #include "lundump.h"
  17          
  18          #define PrintFunction   luaU_print
  19          
  20          #define Sizeof(x)       ((int)sizeof(x))
  21          #define VOID(p)         ((const void*)(p))
  22          
  23          static void PrintString(const TString* ts)
  24          {
  25   1       const char* s=getstr(ts);
  26   1       size_t i,n=ts->tsv.len;
  27   1       putchar('"');
  28   1       for (i=0; i<n; i++)
  29   1       {
  30   2        int c=s[i];
  31   2        switch (c)
  32   2        {
  33   3         case '"': printf("\\\""); break;
  34   3         case '\\': printf("\\\\"); break;
  35   3         case '\a': printf("\\a"); break;
  36   3         case '\b': printf("\\b"); break;
  37   3         case '\f': printf("\\f"); break;
  38   3         case '\n': printf("\\n"); break;
  39   3         case '\r': printf("\\r"); break;
  40   3         case '\t': printf("\\t"); break;
  41   3         case '\v': printf("\\v"); break;
  42   3         default:     if (isprint((unsigned char)c))
  43   3                              putchar(c);
  44   3                      else
  45   3                              printf("\\%03u",(unsigned char)c);
  46   3        }
  47   2       }
  48   1       putchar('"');
  49   1      }
  50          
  51          static void PrintConstant(const Proto* f, int i)
  52          {
  53   1       const TValue* o=&f->k[i];
  54   1       switch (ttype(o))
C51 COMPILER V9.00   PRINT                                                                 11/27/2017 19:45:05 PAGE 2   

  55   1       {
  56   2        case LUA_TNIL:
  57   2              printf("nil");
  58   2              break;
  59   2        case LUA_TBOOLEAN:
  60   2              printf(bvalue(o) ? "true" : "false");
  61   2              break;
  62   2        case LUA_TNUMBER:
  63   2              printf(LUA_NUMBER_FMT,nvalue(o));
  64   2              break;
  65   2        case LUA_TSTRING:
  66   2              PrintString(rawtsvalue(o));
  67   2              break;
  68   2        default:                              /* cannot happen */
  69   2              printf("? type=%d",ttype(o));
  70   2              break;
  71   2       }
  72   1      }
  73          
  74          static void PrintCode(const Proto* f)
  75          {
  76   1       const Instruction* code_=f->code;
*** ERROR C141 IN LINE 76 OF SRC\PRINT.C: syntax error near 'code', expected '<id>'
  77   1       int pc,n=f->sizecode;
  78   1       for (pc=0; pc<n; pc++)
  79   1       {
  80   2        Instruction i=code[pc];
*** ERROR C141 IN LINE 80 OF SRC\PRINT.C: syntax error near 'code'
*** ERROR C141 IN LINE 80 OF SRC\PRINT.C: syntax error near '['
  81   2        OpCode o=GET_OPCODE(i);
*** ERROR C141 IN LINE 81 OF SRC\PRINT.C: syntax error near 'OpCode'
*** ERROR C202 IN LINE 81 OF SRC\PRINT.C: 'o': undefined identifier
  82   2        int a=GETARG_A(i);
*** ERROR C141 IN LINE 82 OF SRC\PRINT.C: syntax error near 'int'
*** ERROR C202 IN LINE 82 OF SRC\PRINT.C: 'a': undefined identifier
  83   2        int b=GETARG_B(i);
*** ERROR C141 IN LINE 83 OF SRC\PRINT.C: syntax error near 'int'
*** ERROR C202 IN LINE 83 OF SRC\PRINT.C: 'b': undefined identifier
  84   2        int c=GETARG_C(i);
*** ERROR C141 IN LINE 84 OF SRC\PRINT.C: syntax error near 'int'
*** ERROR C202 IN LINE 84 OF SRC\PRINT.C: 'c': undefined identifier
  85   2        int bx=GETARG_Bx(i);
*** ERROR C141 IN LINE 85 OF SRC\PRINT.C: syntax error near 'int'
*** ERROR C202 IN LINE 85 OF SRC\PRINT.C: 'bx': undefined identifier
  86   2        int sbx=GETARG_sBx(i);
*** ERROR C141 IN LINE 86 OF SRC\PRINT.C: syntax error near 'int'
*** ERROR C202 IN LINE 86 OF SRC\PRINT.C: 'sbx': undefined identifier
  87   2        int line=getline(f,pc);
*** ERROR C141 IN LINE 87 OF SRC\PRINT.C: syntax error near 'int'
*** ERROR C202 IN LINE 87 OF SRC\PRINT.C: 'line': undefined identifier
  88   2        printf("\t%d\t",pc+1);
  89   2        if (line>0) printf("[%d]\t",line); else printf("[-]\t");
*** ERROR C202 IN LINE 89 OF SRC\PRINT.C: 'line': undefined identifier
*** ERROR C202 IN LINE 89 OF SRC\PRINT.C: 'line': undefined identifier
  90   2        printf("%-9s\t",luaP_opnames[o]);
*** ERROR C202 IN LINE 90 OF SRC\PRINT.C: 'o': undefined identifier
  91   2        switch (getOpMode(o))
*** ERROR C202 IN LINE 91 OF SRC\PRINT.C: 'o': undefined identifier
  92   2        {
  93   3         case iABC:
  94   3          printf("%d",a);
*** ERROR C202 IN LINE 94 OF SRC\PRINT.C: 'a': undefined identifier
C51 COMPILER V9.00   PRINT                                                                 11/27/2017 19:45:05 PAGE 3   

  95   3          if (getBMode(o)!=OpArgN) printf(" %d",ISK(b) ? (-1-INDEXK(b)) : b);
*** ERROR C202 IN LINE 95 OF SRC\PRINT.C: 'o': undefined identifier
*** ERROR C202 IN LINE 95 OF SRC\PRINT.C: 'b': undefined identifier
  96   3          if (getCMode(o)!=OpArgN) printf(" %d",ISK(c) ? (-1-INDEXK(c)) : c);
*** ERROR C202 IN LINE 96 OF SRC\PRINT.C: 'o': undefined identifier
*** ERROR C202 IN LINE 96 OF SRC\PRINT.C: 'c': undefined identifier
  97   3          break;
  98   3         case iABx:
  99   3          if (getBMode(o)==OpArgK) printf("%d %d",a,-1-bx); else printf("%d %d",a,bx);
*** ERROR C202 IN LINE 99 OF SRC\PRINT.C: 'o': undefined identifier
*** ERROR C202 IN LINE 99 OF SRC\PRINT.C: 'a': undefined identifier
*** ERROR C202 IN LINE 99 OF SRC\PRINT.C: 'a': undefined identifier
 100   3          break;
 101   3         case iAsBx:
 102   3          if (o==OP_JMP) printf("%d",sbx); else printf("%d %d",a,sbx);
*** ERROR C202 IN LINE 102 OF SRC\PRINT.C: 'o': undefined identifier
*** ERROR C202 IN LINE 102 OF SRC\PRINT.C: 'sbx': undefined identifier
*** ERROR C202 IN LINE 102 OF SRC\PRINT.C: 'a': undefined identifier
 103   3          break;
 104   3        }
 105   2        switch (o)
*** ERROR C202 IN LINE 105 OF SRC\PRINT.C: 'o': undefined identifier
 106   2        {
 107   3         case OP_LOADK:
 108   3          printf("\t; "); PrintConstant(f,bx);
*** ERROR C202 IN LINE 108 OF SRC\PRINT.C: 'bx': undefined identifier
 109   3          break;
 110   3         case OP_GETUPVAL:
 111   3         case OP_SETUPVAL:
 112   3          printf("\t; %s", (f->sizeupvalues>0) ? getstr(f->upvalues[b]) : "-");
*** ERROR C202 IN LINE 112 OF SRC\PRINT.C: 'b': undefined identifier
 113   3          break;
 114   3         case OP_GETGLOBAL:
 115   3         case OP_SETGLOBAL:
 116   3          printf("\t; %s",svalue(&f->k[bx]));
*** ERROR C202 IN LINE 116 OF SRC\PRINT.C: 'bx': undefined identifier
 117   3          break;
 118   3         case OP_GETTABLE:
 119   3         case OP_SELF:
 120   3          if (ISK(c)) { printf("\t; "); PrintConstant(f,INDEXK(c)); }
*** ERROR C202 IN LINE 120 OF SRC\PRINT.C: 'c': undefined identifier
*** ERROR C202 IN LINE 120 OF SRC\PRINT.C: 'c': undefined identifier
 121   3          break;
 122   3         case OP_SETTABLE:
 123   3         case OP_ADD:
 124   3         case OP_SUB:
 125   3         case OP_MUL:
 126   3         case OP_DIV:
 127   3         case OP_POW:
 128   3         case OP_EQ:
 129   3         case OP_LT:
 130   3         case OP_LE:
 131   3          if (ISK(b) || ISK(c))
*** ERROR C202 IN LINE 131 OF SRC\PRINT.C: 'b': undefined identifier
 132   3          {
 133   4           printf("\t; ");
 134   4           if (ISK(b)) PrintConstant(f,INDEXK(b)); else printf("-");
*** ERROR C202 IN LINE 134 OF SRC\PRINT.C: 'b': undefined identifier
*** ERROR C202 IN LINE 134 OF SRC\PRINT.C: 'b': undefined identifier
 135   4           printf(" ");
 136   4           if (ISK(c)) PrintConstant(f,INDEXK(c)); else printf("-");
*** ERROR C202 IN LINE 136 OF SRC\PRINT.C: 'c': undefined identifier
C51 COMPILER V9.00   PRINT                                                                 11/27/2017 19:45:05 PAGE 4   

*** ERROR C202 IN LINE 136 OF SRC\PRINT.C: 'c': undefined identifier
 137   4          }
 138   3          break;
 139   3         case OP_JMP:
 140   3         case OP_FORLOOP:
 141   3         case OP_FORPREP:
 142   3          printf("\t; to %d",sbx+pc+2);
*** ERROR C202 IN LINE 142 OF SRC\PRINT.C: 'sbx': undefined identifier
 143   3          break;
 144   3         case OP_CLOSURE:
 145   3          printf("\t; %p",VOID(f->p[bx]));
*** ERROR C202 IN LINE 145 OF SRC\PRINT.C: 'bx': undefined identifier
 146   3          break;
 147   3         case OP_SETLIST:
 148   3          if (c==0) printf("\t; %d",(int)code[++pc]);
*** ERROR C202 IN LINE 148 OF SRC\PRINT.C: 'c': undefined identifier
*** ERROR C141 IN LINE 148 OF SRC\PRINT.C: syntax error near 'code'
 149   3          else printf("\t; %d",c);
*** ERROR C202 IN LINE 149 OF SRC\PRINT.C: 'c': undefined identifier
 150   3          break;
 151   3         default:
 152   3          break;
 153   3        }
 154   2        printf("\n");
 155   2       }
 156   1      }
 157          
 158          #define SS(x)   (x==1)?"":"s"
 159          #define S(x)    x,SS(x)
 160          
 161          static void PrintHeader(const Proto* f)
 162          {
 163   1       const char* s=getstr(f->source);
 164   1       if (*s=='@' || *s=='=')
 165   1        s++;
 166   1       else if (*s==LUA_SIGNATURE[0])
 167   1        s="(bstring)";
 168   1       else
 169   1        s="(string)";
 170   1       printf("\n%s <%s:%d,%d> (%d instruction%s, %d bytes at %p)\n",
 171   1              (f->linedefined==0)?"main":"function",s,
 172   1              f->linedefined,f->lastlinedefined,
 173   1              S(f->sizecode),f->sizecode*Sizeof(Instruction),VOID(f));
 174   1       printf("%d%s param%s, %d slot%s, %d upvalue%s, ",
 175   1              f->numparams,f->is_vararg?"+":"",SS(f->numparams),
 176   1              S(f->maxstacksize),S(f->nups));
 177   1       printf("%d local%s, %d constant%s, %d function%s\n",
 178   1              S(f->sizelocvars),S(f->sizek),S(f->sizep));
 179   1      }
 180          
 181          static void PrintConstants(const Proto* f)
 182          {
 183   1       int i,n=f->sizek;
 184   1       printf("constants (%d) for %p:\n",n,VOID(f));
 185   1       for (i=0; i<n; i++)
 186   1       {
 187   2        printf("\t%d\t",i+1);
 188   2        PrintConstant(f,i);
 189   2        printf("\n");
 190   2       }
 191   1      }
 192          
C51 COMPILER V9.00   PRINT                                                                 11/27/2017 19:45:05 PAGE 5   

 193          static void PrintLocals(const Proto* f)
 194          {
 195   1       int i,n=f->sizelocvars;
 196   1       printf("locals (%d) for %p:\n",n,VOID(f));
 197   1       for (i=0; i<n; i++)
 198   1       {
 199   2        printf("\t%d\t%s\t%d\t%d\n",
 200   2        i,getstr(f->locvars[i].varname),f->locvars[i].startpc+1,f->locvars[i].endpc+1);
 201   2       }
 202   1      }
 203          
 204          static void PrintUpvalues(const Proto* f)
 205          {
 206   1       int i,n=f->sizeupvalues;
 207   1       printf("upvalues (%d) for %p:\n",n,VOID(f));
 208   1       if (f->upvalues==NULL) return;
 209   1       for (i=0; i<n; i++)
 210   1       {
 211   2        printf("\t%d\t%s\n",i,getstr(f->upvalues[i]));
*** ERROR C199 IN LINE 211 OF SRC\PRINT.C: left side of '->' requires struct/union pointer
 212   2       }
 213   1      }
 214          
 215          void PrintFunction(const Proto* f, int full)
 216          {
 217   1       int i,n=f->sizep;
 218   1       PrintHeader(f);
 219   1       PrintCode(f);
 220   1       if (full)
 221   1       {
 222   2        PrintConstants(f);
 223   2        PrintLocals(f);
 224   2        PrintUpvalues(f);
 225   2       }
 226   1       for (i=0; i<n; i++) PrintFunction(f->p[i],full);
 227   1      }

C51 COMPILATION COMPLETE.  0 WARNING(S),  49 ERROR(S)
